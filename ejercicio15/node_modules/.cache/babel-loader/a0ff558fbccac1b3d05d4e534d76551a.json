{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeffr\\\\OneDrive\\\\Escritorio\\\\Portafolio\\\\Frontend\\\\open bootcamp\\\\react\\\\hola-mundo\\\\src\\\\components\\\\pure\\\\forms\\\\LoginFormik.jsx\";\nimport React from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginFormik = () => {\n  const loginSchema = Yup.object().shape({\n    email: Yup.string().email(\"Formato de correo Invalido.\").required(\"El correo es requerido.\"),\n    password: Yup.string().required(\"La contraseña es obligatoria.\")\n  });\n  const initialCredentials = {\n    email: \"\",\n    password: \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Formik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialCredentials,\n      validationSchema: loginSchema,\n      onSubmit: async values => {\n        await new Promise(r => {\n          setTimeout(r, 500);\n          alert(JSON.stringify(values, null, 2));\n        });\n      },\n      children: props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleSubmit,\n          handleBlur\n        } = props;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"email\",\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"example@email.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LoginFormik;\nexport default LoginFormik;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFormik\");","map":{"version":3,"names":["React","Formik","Field","Form","Yup","LoginFormik","loginSchema","object","shape","email","string","required","password","initialCredentials","values","Promise","r","setTimeout","alert","JSON","stringify","props","touched","errors","isSubmitting","handleChange","handleSubmit","handleBlur"],"sources":["C:/Users/jeffr/OneDrive/Escritorio/Portafolio/Frontend/open bootcamp/react/hola-mundo/src/components/pure/forms/LoginFormik.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst LoginFormik = () => {\r\n  const loginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Formato de correo Invalido.\")\r\n      .required(\"El correo es requerido.\"),\r\n    password: Yup.string().required(\"La contraseña es obligatoria.\"),\r\n  });\r\n\r\n  const initialCredentials = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login Formik</h1>\r\n      <Formik\r\n        initialValues={initialCredentials}\r\n        validationSchema={loginSchema}\r\n        onSubmit={async (values) => {\r\n          await new Promise((r) => {\r\n            setTimeout(r, 500);\r\n            alert(JSON.stringify(values, null, 2));\r\n          });\r\n        }}\r\n      >\r\n        {/* We obtain props from formik */}\r\n        {(props) => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleSubmit,\r\n            handleBlur,\r\n          } = props;\r\n\r\n          return (\r\n            <Form>\r\n              <label htmlFor=\"email\">Email: </label>\r\n              <Field\r\n                id=\"email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"example@email.com\"\r\n              />\r\n\r\n              <label htmlFor=\"password\">Password: </label>\r\n              <Field\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n              />\r\n\r\n              <button type=\"submit\">Login</button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginFormik;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,QAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EACxB,MAAMC,WAAW,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;IACrCC,KAAK,EAAEL,GAAG,CAACM,MAAJ,GACJD,KADI,CACE,6BADF,EAEJE,QAFI,CAEK,yBAFL,CAD8B;IAIrCC,QAAQ,EAAER,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,+BAAtB;EAJ2B,CAAnB,CAApB;EAOA,MAAME,kBAAkB,GAAG;IACzBJ,KAAK,EAAE,EADkB;IAEzBG,QAAQ,EAAE;EAFe,CAA3B;EAKA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MACE,aAAa,EAAEC,kBADjB;MAEE,gBAAgB,EAAEP,WAFpB;MAGE,QAAQ,EAAE,MAAOQ,MAAP,IAAkB;QAC1B,MAAM,IAAIC,OAAJ,CAAaC,CAAD,IAAO;UACvBC,UAAU,CAACD,CAAD,EAAI,GAAJ,CAAV;UACAE,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;QACD,CAHK,CAAN;MAID,CARH;MAAA,UAWIO,KAAD,IAAW;QACV,MAAM;UACJP,MADI;UAEJQ,OAFI;UAGJC,MAHI;UAIJC,YAJI;UAKJC,YALI;UAMJC,YANI;UAOJC;QAPI,IAQFN,KARJ;QAUA,oBACE,QAAC,IAAD;UAAA,wBACE;YAAO,OAAO,EAAC,OAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,KAAD;YACE,EAAE,EAAC,OADL;YAEE,IAAI,EAAC,OAFP;YAGE,IAAI,EAAC,OAHP;YAIE,WAAW,EAAC;UAJd;YAAA;YAAA;YAAA;UAAA,QAFF,eASE;YAAO,OAAO,EAAC,UAAf;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QATF,eAUE,QAAC,KAAD;YACE,EAAE,EAAC,UADL;YAEE,IAAI,EAAC,UAFP;YAGE,IAAI,EAAC,UAHP;YAIE,WAAW,EAAC;UAJd;YAAA;YAAA;YAAA;UAAA,QAVF,eAiBE;YAAQ,IAAI,EAAC,QAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAjBF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF;MAqBD;IA3CH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkDD,CA/DD;;KAAMhB,W;AAiEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}