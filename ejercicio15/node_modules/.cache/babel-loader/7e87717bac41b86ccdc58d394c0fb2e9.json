{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeffr\\\\OneDrive\\\\Escritorio\\\\Portafolio\\\\Frontend\\\\open bootcamp\\\\react\\\\hola-mundo\\\\src\\\\components\\\\pure\\\\forms\\\\RegisterFormik.jsx\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport React, { useState } from \"react\";\nimport { User } from \"../../../models/user.class\";\nimport { ROLES } from \"../../../models/roles.enum\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterFormik() {\n  let user = new User();\n\n  const submit = values => {\n    console.log(\"Register user\");\n    console.log(values);\n    alert(\"Register user\");\n  };\n\n  const initialCredentials = {\n    email: \"\",\n    password: \"\",\n    confirm: \"\",\n    username: \"\",\n    role: ROLES.USER\n  };\n  const registerSchema = Yup.object().shape({\n    username: Yup.string().min(3, \"El username es demasiado corto\").max(20, \"El username es demasiado Largo\").required(\"Usuario es requerido\"),\n    role: Yup.string().oneOf([ROLES.ADMIN, ROLES.USER], \"Debe seleccionar: User / Admin.\").required(\"Rol es requerido\"),\n    email: Yup.string().email(\"Formato de correo Invalido.\").required(\"El correo es requerido.\"),\n    password: Yup.string().min(6, \"La contraseña es demasiado corta\").required(\"La contraseña es obligatoria.\"),\n    confirm: Yup.string().when(\"password\", {\n      is: value => value && value.length > 0 ? true : false,\n      then: Yup.string().oneOf([Yup.ref(\"password\")], \"Las contraseñas no coinciden\")\n    }).required(\"La confirmación de contraseña es obligatoria\")\n  }); // const [data, setData] = useState(initialData);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register Formik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialCredentials,\n      validationSchema: registerSchema,\n      onSubmit: async values => {\n        await new Promise(r => {\n          setTimeout(r, 500);\n        });\n        alert(JSON.stringify(values, null, 2));\n        localStorage.setItem(\"credentials\", values);\n      },\n      children: props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleSubmit,\n          handleBlur\n        } = props;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"username\",\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Arnold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), errors.username && touched.username && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"div\",\n            name: \"username\",\n            children: msg => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"email\",\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"example@email.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            component: \"div\",\n            name: \"email\",\n            children: msg => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"div\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirm\",\n            children: \"Confirm Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            id: \"confirm\",\n            name: \"confirm\",\n            type: \"password\",\n            placeholder: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), errors.confirm && touched.confirm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              component: \"div\",\n              name: \"confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              marginTop: \"1rem\"\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), isSubmitting ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Login your credentials...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 31\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_c = RegisterFormik;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterFormik\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","Yup","React","useState","User","ROLES","RegisterFormik","user","submit","values","console","log","alert","initialCredentials","email","password","confirm","username","role","USER","registerSchema","object","shape","string","min","max","required","oneOf","ADMIN","when","is","value","length","then","ref","Promise","r","setTimeout","JSON","stringify","localStorage","setItem","props","touched","errors","isSubmitting","handleChange","handleSubmit","handleBlur","display","flexDirection","gap","msg","marginTop"],"sources":["C:/Users/jeffr/OneDrive/Escritorio/Portafolio/Frontend/open bootcamp/react/hola-mundo/src/components/pure/forms/RegisterFormik.jsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { User } from \"../../../models/user.class\";\r\nimport { ROLES } from \"../../../models/roles.enum\";\r\n\r\nexport default function RegisterFormik() {\r\n  let user = new User();\r\n\r\n  const submit = (values) => {\r\n    console.log(\"Register user\");\r\n    console.log(values);\r\n    alert(\"Register user\");\r\n  };\r\n\r\n  const initialCredentials = {\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm: \"\",\r\n    username: \"\",\r\n    role: ROLES.USER,\r\n  };\r\n\r\n  const registerSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .min(3, \"El username es demasiado corto\")\r\n      .max(20, \"El username es demasiado Largo\")\r\n      .required(\"Usuario es requerido\"),\r\n    role: Yup.string().oneOf([ROLES.ADMIN, ROLES.USER],\r\n      \"Debe seleccionar: User / Admin.\")\r\n      .required(\"Rol es requerido\"),\r\n    email: Yup.string()\r\n      .email(\"Formato de correo Invalido.\")\r\n      .required(\"El correo es requerido.\"),\r\n    password: Yup.string()\r\n      .min(6, \"La contraseña es demasiado corta\")\r\n      .required(\"La contraseña es obligatoria.\"),\r\n    confirm: Yup.string()\r\n      .when(\"password\", {\r\n        is: (value) => (value && value.length > 0 ? true : false),\r\n        then: Yup.string().oneOf(\r\n          [Yup.ref(\"password\")],\r\n          \"Las contraseñas no coinciden\"\r\n        ),\r\n      })\r\n      .required(\"La confirmación de contraseña es obligatoria\"),\r\n  });\r\n\r\n  // const [data, setData] = useState(initialData);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Register Formik</h1>\r\n      <Formik\r\n        initialValues={initialCredentials}\r\n        validationSchema={registerSchema}\r\n        onSubmit={async (values) => {\r\n          await new Promise((r) => {\r\n            setTimeout(r, 500);\r\n          });\r\n          alert(JSON.stringify(values, null, 2));\r\n          localStorage.setItem(\"credentials\", values);\r\n        }}\r\n      >\r\n        {/* We obtain props from formik */}\r\n        {(props) => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleSubmit,\r\n            handleBlur,\r\n          } = props;\r\n\r\n          return (\r\n            <Form style={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n              <label htmlFor=\"username\">Username: </label>\r\n              <Field\r\n                id=\"username\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Arnold\"\r\n              />\r\n              {errors.username && touched.username && (\r\n                <ErrorMessage component=\"div\" name=\"username\">\r\n                  {(msg) => <p>{msg}</p>}\r\n                </ErrorMessage>\r\n              )}\r\n\r\n              <label htmlFor=\"email\">Email: </label>\r\n              <Field\r\n                id=\"email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"example@email.com\"\r\n              />\r\n              {errors.email && touched.email && (\r\n                <ErrorMessage component=\"div\" name=\"email\">\r\n                  {(msg) => <p>{msg}</p>}\r\n                </ErrorMessage>\r\n              )}\r\n\r\n              <label htmlFor=\"password\">Password: </label>\r\n              <Field\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n              />\r\n              {errors.password && touched.password && (\r\n                <div className=\"error\">\r\n                  <ErrorMessage component=\"div\" name=\"password\" />\r\n                </div>\r\n              )}\r\n\r\n              <label htmlFor=\"confirm\">Confirm Password: </label>\r\n              <Field\r\n                id=\"confirm\"\r\n                name=\"confirm\"\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n              />\r\n              {errors.confirm && touched.confirm && (\r\n                <div className=\"error\">\r\n                  <ErrorMessage component=\"div\" name=\"confirm\" />\r\n                </div>\r\n              )}\r\n\r\n              <button type=\"submit\" style={{ marginTop: \"1rem\" }}>\r\n                Login\r\n              </button>\r\n\r\n              {isSubmitting ? <p>Login your credentials...</p> : null}\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}